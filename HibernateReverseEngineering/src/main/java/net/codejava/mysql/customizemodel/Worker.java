package net.codejava.mysql.customizemodel;
// Generated 2020-3-22 12:23:42 by Hibernate Tools 5.2.12.Final

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.Table;

/**
 * Worker generated by hbm2java
 */
@Entity
@Table(name = "worker", catalog = "db_hibernate_demo")
public class Worker implements java.io.Serializable {

	private Integer id;
	private String name;
	private Integer monthlyPay;
	private Integer yearlyPay;
	private Integer vocationWithPay;

	public Worker() {
	}

	public Worker(String name, Integer monthlyPay, Integer yearlyPay, Integer vocationWithPay) {
		this.name = name;
		this.monthlyPay = monthlyPay;
		this.yearlyPay = yearlyPay;
		this.vocationWithPay = vocationWithPay;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "ID", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "NAME")
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "MONTHLY_PAY")
	public Integer getMonthlyPay() {
		return this.monthlyPay;
	}

	public void setMonthlyPay(Integer monthlyPay) {
		this.monthlyPay = monthlyPay;
	}

	@Column(name = "YEARLY_PAY")
	public Integer getYearlyPay() {
		return this.yearlyPay;
	}

	public void setYearlyPay(Integer yearlyPay) {
		this.yearlyPay = yearlyPay;
	}

	@Column(name = "VOCATION_WITH_PAY")
	public Integer getVocationWithPay() {
		return this.vocationWithPay;
	}

	public void setVocationWithPay(Integer vocationWithPay) {
		this.vocationWithPay = vocationWithPay;
	}

	/**
	 * toString
	 * @return String
	 */
	public String toString() {
		StringBuffer buffer = new StringBuffer();

		buffer.append(getClass().getName()).append("@").append(Integer.toHexString(hashCode())).append(" [");
		buffer.append("name").append("='").append(getName()).append("' ");
		buffer.append("monthlyPay").append("='").append(getMonthlyPay()).append("' ");
		buffer.append("yearlyPay").append("='").append(getYearlyPay()).append("' ");
		buffer.append("vocationWithPay").append("='").append(getVocationWithPay()).append("' ");
		buffer.append("]");

		return buffer.toString();
	}

	public boolean equals(Object other) {
		if ((this == other))
			return true;
		if ((other == null))
			return false;
		if (!(other instanceof net.codejava.mysql.customizemodel.Worker))
			return false;
		net.codejava.mysql.customizemodel.Worker castOther = (net.codejava.mysql.customizemodel.Worker) other;

		return ((this.getName() == castOther.getName()) || (this.getName() != null && castOther.getName() != null
				&& this.getName().equals(castOther.getName())))
				&& ((this.getMonthlyPay() == castOther.getMonthlyPay()) || (this.getMonthlyPay() != null
						&& castOther.getMonthlyPay() != null && this.getMonthlyPay().equals(castOther.getMonthlyPay())))
				&& ((this.getYearlyPay() == castOther.getYearlyPay()) || (this.getYearlyPay() != null
						&& castOther.getYearlyPay() != null && this.getYearlyPay().equals(castOther.getYearlyPay())))
				&& ((this.getVocationWithPay() == castOther.getVocationWithPay())
						|| (this.getVocationWithPay() != null && castOther.getVocationWithPay() != null
								&& this.getVocationWithPay().equals(castOther.getVocationWithPay())));
	}

	public int hashCode() {
		int result = 17;

		result = 37 * result + (getName() == null ? 0 : this.getName().hashCode());
		result = 37 * result + (getMonthlyPay() == null ? 0 : this.getMonthlyPay().hashCode());
		result = 37 * result + (getYearlyPay() == null ? 0 : this.getYearlyPay().hashCode());
		result = 37 * result + (getVocationWithPay() == null ? 0 : this.getVocationWithPay().hashCode());
		return result;
	}

}
